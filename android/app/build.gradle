plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.einsteini.app"
    compileSdk = 35 // Update to required SDK version
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    
    // Enable lint checks for security
    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds true
        abortOnError false
    }
    
    // Add support for font resources
    aaptOptions {
        noCompress "ttf"  // Don't compress the font files
    }

    defaultConfig {
        applicationId = "com.einsteini.app"
        minSdk = 23 // Ensure compatibility
        targetSdk = 33 // Target a stable SDK version
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        
        // Add this for flutter_appauth
        manifestPlaceholders += [
            'appAuthRedirectScheme': 'com.einsteini.app'
        ]
        
        // Properly document permissions
        resConfigs "en" // Use only English resources for smaller APK
    }

    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.play:core:1.10.3'
    implementation 'androidx.security:security-crypto:1.1.0-alpha06' // Add security library
    implementation 'com.google.android.material:material:1.9.0' // Material Components
}
